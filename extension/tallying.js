(() => {
    console.log('Tallying.js loaded');

    let text = document.body.innerText.toLowerCase();

    let stopWords = new Set(["the", "an", "this", "that", "these", "those", "some", "any", "many", "few", "several", "each", "every", "another", "either", "neither", "one", "all", "both", "none", "such", "am", "is", "are", "was", "were", "snot", "for", "and", "nor", "but", "or", "yet", "so", "after", "although", "as", "because", "before", "even", "if", "once", "since", "though", "unless", "while", "about", "above", "across", "after", "against", "amid", "among", "anti", "around", "as", "at", "before", "behind", "below", "beneath", "beside", "besides", "between", "beyond", "by", "despite", "down", "during", "except", "for", "from", "in", "inside", "into", "like", "minus", "near", "of", "off", "on", "onto", "opposite", "over", "past", "per", "plus", "since", "than", "through", "to", "toward", "towards", "under", "underneath", "unlike", "until", "up", "upon", "versus", "via", "with", "within", "without", "along", "me", "you", "he", "him", "she", "her", "us", "them", "we", "they", "my", "your", "his", "her", "its", "our", "their", "my", "your", "him", "her", "it", "our", "their", "one", "self", "selves", "this", "that", "those", "these", "it", "who", "whom", "whose", "which", "what", "many", "few", "whoever", "whomever", "whichever", "whatever", "some", "any", "every", "no", "one", "body", "thing", "me", "you", "he", "him", "she", "her", "us", "them", "we", "they", "my", "your", "his", "her", "its", "our", "their", "my", "your", "him", "her", "it", "our", "their", "one", "self", "selves", "this", "that", "those", "these", "it", "who", "whom", "whose", "which", "what", "many", "few", "whoever", "whomever", "whichever", "whatever", "some", "any", "every", "no", "one", "body", "thing", "do", "does", "did", "have", "has", "had", "can", "not", "could", "may", "might", "must", "shall", "should", "will", "would", "ve", "do", "does", "did", "have", "has", "had", "can", "not", "could", "may", "might", "must", "shall", "should", "will", "would", "ve", "here", "there", "everywhere", "nowhere", "nearby", "far", "inside", "outside", "now", "then", "today", "tonight", "tomorrow", "yesterday", "soon", "later", "early", "late", "always", "never", "often", "sometimes", "seldom", "very", "too", "so", "quite", "rather", "almost", "just", "most", "also", "here", "there", "everywhere", "nowhere", "nearby", "far", "inside", "outside", "now", "then", "today", "tonight", "tomorrow", "yesterday", "soon", "later", "early", "late", "always", "never", "often", "sometimes", "seldom", "very", "too", "so", "quite", "rather", "almost", "just", "most", "also", "Article", "the", "an", "this", "that", "these", "those", "some", "any", "many", "few", "several", "each", "every", "another", "either", "neither", "one", "all", "both", "none", "such", "am", "is", "are", "was", "were", "snot", "for", "and", "nor", "but", "or", "yet", "so", "after", "although", "as", "because", "before", "even", "if", "once", "since", "though", "unless", "while", "do", "does", "did", "have", "has", "had", "can", "not", "could", "may", "might", "must", "shall", "should", "will", "would", "ve", "me", "you", "he", "him", "she", "her", "us", "them", "we", "they", "my", "your", "his", "her", "its", "our", "their", "my", "your", "him", "her", "it", "our", "their", "one", "self", "selves", "this", "that", "those", "these", "it", "who", "whom", "whose", "which", "what", "many", "few", "whoever", "whomever", "whichever", "whatever", "some", "any", "every", "no", "one", "body", "thing", "here", "there", "everywhere", "nowhere", "nearby", "far", "inside", "outside", "now", "then", "today", "tonight", "tomorrow", "yesterday", "soon", "later", "early", "late", "always", "never", "often", "sometimes", "seldom", "very", "too", "so", "quite", "rather", "almost", "just", "most", "also", "about", "above", "across", "after", "against", "amid", "among", "anti", "around", "as", "at", "before", "behind", "below", "beneath", "beside", "besides", "between", "beyond", "by", "despite", "down", "during", "except", "for", "from", "in", "inside", "into", "like", "minus", "near", "of", "off", "on", "onto", "opposite", "over", "past", "per", "plus", "since", "than", "through", "to", "toward", "towards", "under", "underneath", "unlike", "until", "up", "upon", "versus", "via", "with", "within", "without", "along", "the", "an", "this", "that", "these", "those", "some", "any", "many", "few", "several", "each", "every", "another", "either", "neither", "one", "all", "both", "none", "such", "am", "is", "are", "was", "were", "snot", "for", "and", "nor", "but", "or", "yet", "so", "after", "although", "as", "because", "before", "even", "if", "once", "since", "though", "unless", "while", "do", "does", "did", "have", "has", "had", "can", "not", "could", "may", "might", "must", "shall", "should", "will", "would", "ve", "me", "you", "he", "him", "she", "her", "us", "them", "we", "they", "my", "your", "his", "her", "its", "our", "their", "my", "your", "him", "her", "it", "our", "their", "one", "self", "selves", "this", "that", "those", "these", "it", "who", "whom", "whose", "which", "what", "many", "few", "whoever", "whomever", "whichever", "whatever", "some", "any", "every", "no", "one", "body", "thing", "here", "there", "everywhere", "nowhere", "nearby", "far", "inside", "outside", "now", "then", "today", "tonight", "tomorrow", "yesterday", "soon", "later", "early", "late", "always", "never", "often", "sometimes", "seldom", "very", "too", "so", "quite", "rather", "almost", "just", "most", "also", "about", "above", "across", "after", "against", "amid", "among", "anti", "around", "as", "at", "before", "behind", "below", "beneath", "beside", "besides", "between", "beyond", "by", "despite", "down", "during", "except", "for", "from", "in", "inside", "into", "like", "minus", "near", "of", "off", "on", "onto", "opposite", "over", "past", "per", "plus", "since", "than", "through", "to", "toward", "towards", "under", "underneath", "unlike", "until", "up", "upon", "versus", "via", "with", "within", "without", "along"]);

    let words = text.match(/\b\w+\b/g).filter(word => !stopWords.has(word) && word.length > 1); // Filter out stop words and single characters

    let wordCounts = words.reduce((counts, word) => {
        counts[word] = (counts[word] || 0) + 1;
        return counts;
    }, {});

    let top8Words = Object.entries(wordCounts)
        .sort((a, b) => b[1] - a[1]) // Sort by count descending
        .slice(0, 8)
        .reduce((obj, [word, count]) => {
            obj[word] = count;
            return obj;
        }, {});

    chrome.runtime.sendMessage({ action: 'sendResults', data: top8Words });
})();